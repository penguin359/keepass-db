window.SIDEBAR_ITEMS = {"enum":["CompareResult","Endianness","Err","ErrorKind","Needed"],"fn":["alpha","alpha0","alpha1","alphanumeric","alphanumeric0","alphanumeric1","anychar","be_f32","be_f64","be_i128","be_i16","be_i24","be_i32","be_i64","be_i8","be_u128","be_u16","be_u24","be_u32","be_u64","be_u8","begin","code_from_offset","crlf","digit","digit0","digit1","double","double_s","eol","error_to_u32","float","float_s","hex_digit","hex_digit0","hex_digit1","hex_u32","is_alphabetic","is_alphanumeric","is_digit","is_hex_digit","is_oct_digit","is_space","le_f32","le_f64","le_i128","le_i16","le_i24","le_i32","le_i64","le_i8","le_u128","le_u16","le_u24","le_u32","le_u64","le_u8","line_ending","multispace","multispace0","multispace1","need_more","need_more_err","newline","non_empty","not_line_ending","oct_digit","oct_digit0","oct_digit1","print","print_codes","recognize_float","reset_color","rest","rest_len","rest_s","sized_buffer","slice_to_offsets","space","space0","space1","tab","tag_cl","write_color"],"macro":["add_return_error","alt","alt_complete","apply","apply_m","bits","bytes","call","call_m","char","closure","complete","cond","cond_reduce","cond_with_error","count","count_fixed","dbg","dbg_dmp","delimited","do_parse","eat_separator","eof","error_node_position","error_position","escaped","escaped_transform","exact","expr_opt","expr_res","fix_error","flat_map","fold_many0","fold_many1","fold_many_m_n","i128","i16","i32","i64","is_a","is_a_s","is_not","is_not_s","length_bytes","length_count","length_data","length_value","many0","many0_count","many1","many1_count","many_m_n","many_till","map","map_opt","map_res","map_res_err","method","named","named_args","named_attr","nom_compile_error","nom_line","nom_println","nom_stringify","none_of","not","one_of","opt","opt_res","pair","parse_to","peek","permutation","preceded","recognize","return_error","sep","separated_list","separated_list_complete","separated_nonempty_list","separated_nonempty_list_complete","separated_pair","switch","tag","tag_bits","tag_no_case","tag_no_case_s","tag_s","take","take_bits","take_s","take_str","take_till","take_till1","take_till1_s","take_till_s","take_until","take_until1","take_until_and_consume","take_until_and_consume1","take_until_and_consume_s","take_until_either","take_until_either1","take_until_either_and_consume","take_until_either_and_consume1","take_until_s","take_while","take_while1","take_while1_s","take_while_m_n","take_while_s","tap","terminated","try_parse","tuple","u128","u16","u32","u64","value","verify","wrap_sep","ws"],"mod":["bits","lib","methods","simple_errors","types","whitespace"],"trait":["AsBytes","AsChar","AtEof","Compare","Convert","ExtendInto","FindSubstring","FindToken","HexDisplay","InputIter","InputLength","InputTake","InputTakeAtPosition","Offset","ParseTo","Slice","UnspecializedInput"],"type":["IResult"]};